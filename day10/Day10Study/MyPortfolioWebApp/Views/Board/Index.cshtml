@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManger
@model IEnumerable<MyPortfolioWebApp.Models.Board>

@{
    ViewData["Title"] = "Index";
}

<section id="board" class="section">
    <div class="container section-title" data-aos="fade-up">
        <h2>자유게시판</h2>
        <p>자유게시판입니다.</p>
    </div>

    <div class="container" data-aos="fade-up" data-aos-delay="100">
        <div class="row-justify-content-between mb-2">
            <div class="col-3">
                @if (SignInManager.IsSignedIn(User))
                    {
                        <a asp-controller="Board" asp-action="Create"
                           class="btn btn-sm btn-success btn-kelly">작성</a>
                    }
            </div>
            <div class="col-6">
                <form asp-action="Index" method="get">
                    <div class="input-group input-group-sm justify-content-end">
                        <input type="text" id="search" name="search" class="form-control-sm" value="@search" />
                        <button type="submit" class="btn btn-success">검색</button>
                    </div>
                </form>
            </div>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Writer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contents)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ReadCount)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Writer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Contents)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PostDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReadCount)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
        }
            </tbody>
        </table>

    </div>
</section>
